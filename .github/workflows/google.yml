name: 'Build and Deploy to GKE'

on:
  push:
    branches:
      - '**'

env:
  PROJECT_ID: 'decent-core-438006-u1'
  SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
  CLUSTER_NAME: 'driver-pay-cluster'
  REGION: 'asia-south1'

jobs:
  build-deploy:
    name: 'Build, Push Docker Image, and Deploy to GKE'
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js for Angular
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Install dependencies and run tests
      - name: Install dependencies and run tests
        run: |
          npm install
          npm test

      # Step 4: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 5: Set up Google Cloud SDK
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ env.SERVICE_ACCOUNT_KEY }}

      # Step 6: Authenticate Google Cloud
      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.SERVICE_ACCOUNT_KEY }}

      # Step 7: Configure Docker for Google Container Registry
      - name: Configure Docker authentication
        run: gcloud auth configure-docker

      # Step 8: Install GKE auth plugin
      - name: Install GKE auth plugin
        run: gcloud components install gke-gcloud-auth-plugin

      # Step 9: Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          IMAGE_NAME=gcr.io/${{ env.PROJECT_ID }}/driver-pay:$COMMIT_SHA
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      # Step 10: Deploy to GKE
      - name: Deploy to GKE
        run: |
          echo "Getting credentials for cluster $CLUSTER_NAME in region $REGION"
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }}
          COMMIT_SHA=$(git rev-parse --short HEAD)
          sed -i "s|gcr.io/decent-core-438006-u1/$SERVICE_NAME:latest|gcr.io/decent-core-438006-u1/$SERVICE_NAME:$COMMIT_SHA|g" k8s/deployment.yaml
          kubectl apply -f k8s/

      # Step 11: Check deployment status
      - name: Check deployment status
        run: kubectl get deployments

      # Step 12: Check pod status
      - name: Check pod status
        run: kubectl get pods
